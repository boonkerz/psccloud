
<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:views="clr-namespace:PscCloud.Views"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="PscCloud.Views.MainWindow"
		xmlns:microcube="clr-namespace:MicroCubeAvalonia.Controls;assembly=MicroCubeAvalonia"
		xmlns:iconPack="clr-namespace:MicroCubeAvalonia.IconPack;assembly=MicroCubeAvalonia"
		xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
		xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
		xmlns:vm="clr-namespace:PscCloud.ViewModels"
		xmlns:converter="clr-namespace:PscCloud.Converter"
        Icon="/Assets/avalonia-logo.ico"
        Title="PscCloud">

	<Design.DataContext>
		<vm:MainWindowViewModel/>
	</Design.DataContext>

	<Grid>
		<Grid.Resources>
			<ResourceDictionary>
				<converter:InverseBoolConverter x:Key="inverseBoolConverter" />
			</ResourceDictionary>
		</Grid.Resources>

		<microcube:HamburgerMenu Items="{Binding MenuItems}"
								 OptionItems="{Binding MenuOptionItems}"
								 SelectedItem="{Binding SelectedItem}"
								 SidebarBrush="{DynamicResource SidebarBrush}"
								 SidebarForeground="White"
								 HoverHighlightBrush="{DynamicResource SidebarHoverBrush}"
								 x:Name="hamburgerMenu"/>

		<microcube:ProgressRing IsVisible="{Binding IsReconnecting}"
								Width="20" Height="20"
								HorizontalAlignment="Left"
								VerticalAlignment="Bottom"
								Margin="15,0,0,100"
								Foreground="White" />
		<Button Width="48" Height="48"
				HorizontalAlignment="Left"
				VerticalAlignment="Bottom"
				HorizontalContentAlignment="Left"
				Padding="0"
				Classes="styleless"
				Background="Transparent"
				Margin="0,0,0,80"
				Command="{Binding RefreshEverythingCommand}"
				IsVisible="{Binding Path=IsEffectivelyEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay}">

			<i:Interaction.Behaviors>
				<ia:DataTriggerBehavior Binding="{Binding #hamburgerMenu.IsPaneOpen}" ComparisonCondition="Equal" Value="True">
					<ia:ChangePropertyAction PropertyName="Width" Value="240"/>
				</ia:DataTriggerBehavior>
				<ia:DataTriggerBehavior Binding="{Binding #hamburgerMenu.IsPaneOpen}" ComparisonCondition="NotEqual" Value="True">
					<ia:ChangePropertyAction PropertyName="Width" Value="48"/>
				</ia:DataTriggerBehavior>
			</i:Interaction.Behaviors>

			<Button.Styles>
				<Style Selector="Button:pointerover /template/ ContentPresenter">
					<Setter Property="Background" Value="{DynamicResource SidebarHoverBrush}"/>
				</Style>
			</Button.Styles>

			<Button.Content>
				<Grid ColumnDefinitions="48, *">
					<iconPack:IconControl Kind="PackIconMaterialKind.Server"
                                Grid.Column="0"
                                Foreground="White"
                                Width="16" Height="16"
                                IsVisible="{Binding IsRefreshing, Converter={StaticResource inverseBoolConverter}}"/>

					<microcube:ProgressRing IsVisible="{Binding IsRefreshing}"
											Grid.Column="0"
											Width="16" Height="16"
											Foreground="White"/>

					<TextBlock Text="Refresh"
							   Grid.Column="1"
							   VerticalAlignment="Center"
							   Foreground="White"
							   FontSize="16" />
				</Grid>
			</Button.Content>
		</Button>

		<!--Big Dialog Popup-->
		<ContentControl Content="{Binding DialogManagerRegular}" />

		<!--Top Most Dialog Popup-->
		<ContentControl Content="{Binding DialogManagerTopMost}" />


		<!--In-App Toast Area-->
		<UserControl HorizontalAlignment="Right"
					 VerticalAlignment="Top"
					 Width="250"
					 Margin="0,60,5,0"
					 Content="{Binding ToastHolderManager}" />
	</Grid>
	
</Window>
